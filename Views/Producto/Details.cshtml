@model Libreria.Models.Producto
    @using Microsoft.AspNet.Identity


@{
    ViewBag.Title = "Detalles del Producto";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <!-- Imagen destacada del producto -->
            @if (Model.Imagenes != null && Model.Imagenes.Count > 0)
            {
                <div class="mb-3">
                    <img src="@Model.Imagenes.First().ImageUrl" class="img-fluid rounded shadow" alt="Imagen principal del producto" style="max-width: 80%; height: auto;">
                </div>
            }
        </div>
        <div class="col-md-6">
            <h2 class="mb-3">@Html.DisplayFor(model => model.Nombre)</h2>
            <h3 class="text-danger mb-3"> $@Html.DisplayFor(model => model.Precio)</h3>

            <div class="mt-4">
                <h4>Descripción</h4>
                <p>@Html.DisplayFor(model => model.Descripcion)</p>
            </div>

            <div class="mt-4">
                <form action="@Url.Action("AgregarProductoCarrito", "Carrito")" method="post" class="mt-2">
                    <input type="hidden" name="idProducto" value="@Model.IdProducto" />
                    <input type="hidden" name="cantidad" value="1" />
                    <button type="submit" class="btn btn-danger w-100" @(Model.Disponibilidad ? "" : "disabled title='Producto no disponible'")>
                        <i class="fas fa-shopping-cart"></i> Añadir al carrito
                    </button>
                </form>
            </div>
        </div>
    </div>

    <!-- Otras imágenes -->
    @if (Model.Imagenes != null && Model.Imagenes.Count > 1)
    {
        <div class="row mt-3">
            <h4>Otras Imágenes</h4>
            @foreach (var image in Model.Imagenes.Skip(1))
            {
                <div class="col-md-4 mb-2">
                    <img src="@image.ImageUrl" class="img-fluid" alt="Imagen adicional" style="max-width: 70%; height: auto;">
                </div>
            }
        </div>
    }

    
    <div class="mt-4">
        <h4>Reseñas</h4>
        @if (Model.Reseña != null && Model.Reseña.Any())
        {
            <ul class="list-group">
                @foreach (var reseña in Model.Reseña.OrderByDescending(r => r.Fecha))
                {
                    <li class="list-group-item">
                        <strong>@reseña.Usuario.NombreUsuario</strong> (@reseña.Fecha.ToString("dd/MM/yyyy"))
                        <p>Calificación: @reseña.Calificacion / 5</p>
                        <p>@reseña.Comentario</p>

                        @if (User.Identity.IsAuthenticated)
                        {
                            // Obtiene la ID de la tabla AspNetUsers
                            string usuarioIdAspNet = User.Identity.GetUserId();

                            // Luego busca la ID directamente desde el DBContext de usuarios ya que
                            // esta tiene una referencia a la tabla AspNetUsers luego se usa una expresion labmda para 
                            // coincidir con el AspNetUsers q hace referencia en la tabla de Usuarios y ya se manda al if para mostrar los botones
                            var usuarioActual = new Libreria.Models.ApplicationDbContext().Usuarios.FirstOrDefault(u => u.AspNetUserId == usuarioIdAspNet);

                            if (usuarioActual != null && (reseña.IdUsuario == usuarioActual.IdUsuario || User.IsInRole("Admin")))
                            {
                                <div class="mt-2">
                                    <a href="@Url.Action("Edit", "Reseña", new { idProducto = Model.IdProducto, id = reseña.IdReseña })" class="btn btn-warning btn-sm">
                                        <i class="fas fa-edit"></i> Editar
                                    </a>
                                    <a href="@Url.Action("Delete", "Reseña", new { idProducto = Model.IdProducto, id = reseña.IdReseña })" class="btn btn-danger btn-sm" onclick="return confirm('¿Estás seguro de que quieres eliminar esta reseña?');">
                                        <i class="fas fa-trash"></i> Eliminar
                                    </a>
                                </div>
                            }
                        }

                    </li>
                }
            </ul>
        }
        else
        {
            <p>No existen reseñas de este producto</p>
        }

        <!-- Botón para agregar reseña -->
        @if (User.Identity.IsAuthenticated)
        {
            <a href="@Url.Action("Create", "Reseña", new { idProducto = Model.IdProducto })" class="btn btn-success mt-3">
                <i class="fas fa-pen"></i> Escribir Reseña
            </a>
        }
        else
        {
            <p class="mt-2">Inicia sesión para escribir una reseña.</p>
        }
    </div>

    <div class="mt-4">
        @Html.ActionLink("Volver al catálogo", "Index", null, new { @class = "btn btn-dark" })
    </div>

    @if (User.IsInRole("Admin"))
    {
        <div class="mt-3">
            <a href="@Url.Action("Edit", "Producto", new { id = Model.IdProducto })" class="btn btn-warning">
                <i class="fas fa-edit"></i> Editar
            </a>
        </div>
    }
</div>
