@model Libreria.Models.Producto

@{
    ViewBag.Title = "Crear Producto";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">@ViewBag.Title</h2>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="card shadow-lg mx-auto" style="max-width: 1000px; border-radius: 15px;">
            <div class="card-body d-flex flex-wrap">
                <div class="col-md-5 mb-4 mb-md-0">
                    <h5 class="text-center mb-3">Subir Imagen</h5>
                    <div class="mb-3">
                        <input type="file" name="ImagenFiles" class="form-control border-0 rounded shadow-sm" multiple accept="image/*" />
                        <p class="text-muted text-center mt-2">Seleccione una o varias imágenes (JPG, PNG, GIF).</p>
                    </div>
                </div>

                <!-- Columna de formulario de producto -->
                <div class="col-md-7">
                    <h4 class="card-title text-center mb-4">Ingrese los detalles del producto</h4>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Nombre, new { @class = "form-label " })
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control border-0 shadow-sm" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Precio, new { @class = "form-label" })
                        @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control border-0 shadow-sm" } })
                        @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Descripcion, new { @class = "form-label" })
                        @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control border-0 shadow-sm", style = "width: 200%; height: 125px;" })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Disponibilidad, new { @class = "form-label" })

                        <div class="form-check form-switch">
                            @Html.CheckBoxFor(model => model.Disponibilidad, new { @class = "form-check-input" })
                            <label class="form-check-label">Disponible</label>
                        </div>

                        @Html.ValidationMessageFor(model => model.Disponibilidad, "", new { @class = "text-danger" })
                    </div>

                    @Html.HiddenFor(model => model.Estado, new { @Value = true })

                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-primary btn-lg px-4 py-2 rounded-pill shadow-sm" style="transition: all 0.3s ease;">
                            Crear Producto
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="mt-4 text-center">
        <a href="@Url.Action("Index")" class="btn btn-outline-primary btn-lg px-4 py-2 rounded-pill shadow-sm" style="transition: all 0.3s ease;">
            Volver al catálogo
        </a>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
